{"ast":null,"code":"var _jsxFileName = \"/Users/koba/work/huge-reversi/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport styled from 'styled-components';\nimport GameBoard from './components/GameBoard';\nimport VirtualizedBoard from './components/VirtualizedBoard';\nimport GameControls from './components/GameControls';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #1a1a1a;\n  color: white;\n  font-family: Arial, sans-serif;\n`;\n_c = AppContainer;\nconst Header = styled.h1`\n  margin: 20px 0;\n  color: #4CAF50;\n`;\n_c2 = Header;\nconst GameContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: flex-start;\n  max-width: 100vw;\n  overflow: hidden;\n`;\n_c3 = GameContainer;\nconst GameInfo = styled.div`\n  background-color: #2a2a2a;\n  border-radius: 10px;\n  padding: 20px;\n  margin-bottom: 20px;\n  border: 2px solid #4CAF50;\n`;\n_c4 = GameInfo;\nconst InfoItem = styled.div`\n  margin-bottom: 10px;\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n_c5 = InfoItem;\nconst InfoLabel = styled.span`\n  font-weight: bold;\n  color: #4CAF50;\n  margin-right: 10px;\n`;\n_c6 = InfoLabel;\nconst InfoValue = styled.span`\n  color: white;\n`;\n_c7 = InfoValue;\nfunction App() {\n  _s();\n  var _gameState$players, _gameState$players2, _gameState$players$ga;\n  const [socket, setSocket] = useState(null);\n  const [gameState, setGameState] = useState(null);\n  const [gameId, setGameId] = useState('');\n  const [playerName, setPlayerName] = useState('');\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    const newSocket = io('http://localhost:5001');\n    setSocket(newSocket);\n    newSocket.on('connect', () => {\n      setConnected(true);\n    });\n    newSocket.on('disconnect', () => {\n      setConnected(false);\n    });\n    newSocket.on('gameState', state => {\n      setGameState(state);\n    });\n    newSocket.on('gameOver', winner => {\n      alert(`ゲーム終了！勝者: ${winner ? winner.playerName : '引き分け'}`);\n    });\n    newSocket.on('error', error => {\n      alert(`エラー: ${error}`);\n    });\n    return () => newSocket.close();\n  }, []);\n  const joinGame = () => {\n    if (socket && gameId && playerName) {\n      socket.emit('joinGame', {\n        gameId,\n        playerName\n      });\n    }\n  };\n  const makeMove = (row, col) => {\n    if (socket && gameState) {\n      socket.emit('makeMove', {\n        gameId: gameState.gameId,\n        row,\n        col\n      });\n    }\n  };\n\n  // 有効な手を計算する関数\n  const calculateValidMoves = gameState => {\n    console.log('calculateValidMoves called with gameState:', gameState);\n    if (!gameState) {\n      console.log('No gameState');\n      return new Set();\n    }\n    if (!gameState.gameStarted) {\n      console.log('Game not started');\n      return new Set();\n    }\n    if (gameState.players.length !== 2) {\n      console.log('Not enough players:', gameState.players.length);\n      return new Set();\n    }\n    const currentPlayerNumber = gameState.players[gameState.currentPlayer].playerNumber;\n    console.log('Current player number:', currentPlayerNumber);\n    console.log('Board center area:', gameState.board.slice(14, 18).map(row => row.slice(14, 18)));\n    const validMoves = new Set();\n    const directions = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n    const getFlippedPieces = (row, col, playerNumber) => {\n      const flipped = [];\n      const opponent = playerNumber === 1 ? 2 : 1;\n      for (const [dr, dc] of directions) {\n        const tempFlipped = [];\n        let r = row + dr;\n        let c = col + dc;\n        while (r >= 0 && r < gameState.boardSize && c >= 0 && c < gameState.boardSize) {\n          if (gameState.board[r][c] === 0) break;\n          if (gameState.board[r][c] === opponent) {\n            tempFlipped.push([r, c]);\n          } else if (gameState.board[r][c] === playerNumber) {\n            flipped.push(...tempFlipped);\n            break;\n          }\n          r += dr;\n          c += dc;\n        }\n      }\n      return flipped;\n    };\n\n    // 32x32ボードの中央は15,16行目付近。標準的なオセロの初期配置の周りをテスト\n    const center = Math.floor(gameState.boardSize / 2); // 16\n    const testPositions = [[center - 2, center - 1],\n    // [14, 15]\n    [center - 1, center - 2],\n    // [15, 14] \n    [center - 1, center + 1],\n    // [15, 17]\n    [center, center - 2],\n    // [16, 14]\n    [center, center + 1],\n    // [16, 17]\n    [center + 1, center - 2],\n    // [17, 14]\n    [center + 1, center - 1],\n    // [17, 15]\n    [center + 2, center] // [18, 16]\n    ];\n    for (const [row, col] of testPositions) {\n      if (gameState.board[row][col] === 0) {\n        const flipped = getFlippedPieces(row, col, currentPlayerNumber);\n        console.log(`Testing position [${row}, ${col}]:`, flipped.length, 'pieces would be flipped');\n        if (flipped.length > 0) {\n          validMoves.add(`${row}-${col}`);\n        }\n      }\n    }\n    console.log('Valid moves found:', validMoves);\n    return validMoves;\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"\\u5DE8\\u5927\\u30AA\\u30BB\\u30ED - Huge Reversi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), !gameState ? /*#__PURE__*/_jsxDEV(GameControls, {\n      gameId: gameId,\n      setGameId: setGameId,\n      playerName: playerName,\n      setPlayerName: setPlayerName,\n      onJoinGame: joinGame,\n      connected: connected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GameInfo, {\n        children: [/*#__PURE__*/_jsxDEV(InfoItem, {\n          children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n            children: \"\\u30B2\\u30FC\\u30E0ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n            children: (gameState === null || gameState === void 0 ? void 0 : gameState.gameId) || gameId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n          children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n            children: \"\\u3042\\u306A\\u305F\\u306E\\u30D7\\u30EC\\u30A4\\u30E4\\u30FC\\u540D:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n            children: playerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n          children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n            children: \"\\u53C2\\u52A0\\u30D7\\u30EC\\u30A4\\u30E4\\u30FC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n            children: [(gameState === null || gameState === void 0 ? void 0 : (_gameState$players = gameState.players) === null || _gameState$players === void 0 ? void 0 : _gameState$players.map(p => p.playerName).join(', ')) || 'なし', \"(\", (gameState === null || gameState === void 0 ? void 0 : (_gameState$players2 = gameState.players) === null || _gameState$players2 === void 0 ? void 0 : _gameState$players2.length) || 0, \"/2)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), (gameState === null || gameState === void 0 ? void 0 : gameState.gameStarted) && /*#__PURE__*/_jsxDEV(InfoItem, {\n          children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n            children: \"\\u73FE\\u5728\\u306E\\u30BF\\u30FC\\u30F3:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n            children: (_gameState$players$ga = gameState.players[gameState.currentPlayer]) === null || _gameState$players$ga === void 0 ? void 0 : _gameState$players$ga.playerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GameContainer, {\n        children: gameState && gameState.boardSize > 16 ? /*#__PURE__*/_jsxDEV(VirtualizedBoard, {\n          gameState: gameState,\n          onMakeMove: makeMove,\n          validMoves: calculateValidMoves(gameState)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(GameBoard, {\n          gameState: gameState,\n          onMakeMove: makeMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ft8HSaEbWDglEhS86cRWrbttBG0=\");\n_c8 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"GameContainer\");\n$RefreshReg$(_c4, \"GameInfo\");\n$RefreshReg$(_c5, \"InfoItem\");\n$RefreshReg$(_c6, \"InfoLabel\");\n$RefreshReg$(_c7, \"InfoValue\");\n$RefreshReg$(_c8, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","styled","GameBoard","VirtualizedBoard","GameControls","jsxDEV","_jsxDEV","Fragment","_Fragment","AppContainer","div","_c","Header","h1","_c2","GameContainer","_c3","GameInfo","_c4","InfoItem","_c5","InfoLabel","span","_c6","InfoValue","_c7","App","_s","_gameState$players","_gameState$players2","_gameState$players$ga","socket","setSocket","gameState","setGameState","gameId","setGameId","playerName","setPlayerName","connected","setConnected","newSocket","on","state","winner","alert","error","close","joinGame","emit","makeMove","row","col","calculateValidMoves","console","log","Set","gameStarted","players","length","currentPlayerNumber","currentPlayer","playerNumber","board","slice","map","validMoves","directions","getFlippedPieces","flipped","opponent","dr","dc","tempFlipped","r","c","boardSize","push","center","Math","floor","testPositions","add","children","fileName","_jsxFileName","lineNumber","columnNumber","onJoinGame","p","join","onMakeMove","_c8","$RefreshReg$"],"sources":["/Users/koba/work/huge-reversi/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport styled from 'styled-components';\nimport GameBoard from './components/GameBoard';\nimport VirtualizedBoard from './components/VirtualizedBoard';\nimport GameControls from './components/GameControls';\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #1a1a1a;\n  color: white;\n  font-family: Arial, sans-serif;\n`;\n\nconst Header = styled.h1`\n  margin: 20px 0;\n  color: #4CAF50;\n`;\n\nconst GameContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: flex-start;\n  max-width: 100vw;\n  overflow: hidden;\n`;\n\nconst GameInfo = styled.div`\n  background-color: #2a2a2a;\n  border-radius: 10px;\n  padding: 20px;\n  margin-bottom: 20px;\n  border: 2px solid #4CAF50;\n`;\n\nconst InfoItem = styled.div`\n  margin-bottom: 10px;\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst InfoLabel = styled.span`\n  font-weight: bold;\n  color: #4CAF50;\n  margin-right: 10px;\n`;\n\nconst InfoValue = styled.span`\n  color: white;\n`;\n\nfunction App() {\n  const [socket, setSocket] = useState(null);\n  const [gameState, setGameState] = useState(null);\n  const [gameId, setGameId] = useState('');\n  const [playerName, setPlayerName] = useState('');\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    const newSocket = io('http://localhost:5001');\n    setSocket(newSocket);\n\n    newSocket.on('connect', () => {\n      setConnected(true);\n    });\n\n    newSocket.on('disconnect', () => {\n      setConnected(false);\n    });\n\n    newSocket.on('gameState', (state) => {\n      setGameState(state);\n    });\n\n    newSocket.on('gameOver', (winner) => {\n      alert(`ゲーム終了！勝者: ${winner ? winner.playerName : '引き分け'}`);\n    });\n\n    newSocket.on('error', (error) => {\n      alert(`エラー: ${error}`);\n    });\n\n    return () => newSocket.close();\n  }, []);\n\n  const joinGame = () => {\n    if (socket && gameId && playerName) {\n      socket.emit('joinGame', { gameId, playerName });\n    }\n  };\n\n  const makeMove = (row, col) => {\n    if (socket && gameState) {\n      socket.emit('makeMove', { gameId: gameState.gameId, row, col });\n    }\n  };\n\n  // 有効な手を計算する関数\n  const calculateValidMoves = (gameState) => {\n    console.log('calculateValidMoves called with gameState:', gameState);\n    \n    if (!gameState) {\n      console.log('No gameState');\n      return new Set();\n    }\n    \n    if (!gameState.gameStarted) {\n      console.log('Game not started');\n      return new Set();\n    }\n    \n    if (gameState.players.length !== 2) {\n      console.log('Not enough players:', gameState.players.length);\n      return new Set();\n    }\n\n    const currentPlayerNumber = gameState.players[gameState.currentPlayer].playerNumber;\n    console.log('Current player number:', currentPlayerNumber);\n    console.log('Board center area:', gameState.board.slice(14, 18).map(row => row.slice(14, 18)));\n    \n    const validMoves = new Set();\n    const directions = [\n      [-1, -1], [-1, 0], [-1, 1],\n      [0, -1],           [0, 1],\n      [1, -1],  [1, 0],  [1, 1]\n    ];\n\n    const getFlippedPieces = (row, col, playerNumber) => {\n      const flipped = [];\n      const opponent = playerNumber === 1 ? 2 : 1;\n\n      for (const [dr, dc] of directions) {\n        const tempFlipped = [];\n        let r = row + dr;\n        let c = col + dc;\n\n        while (r >= 0 && r < gameState.boardSize && c >= 0 && c < gameState.boardSize) {\n          if (gameState.board[r][c] === 0) break;\n          if (gameState.board[r][c] === opponent) {\n            tempFlipped.push([r, c]);\n          } else if (gameState.board[r][c] === playerNumber) {\n            flipped.push(...tempFlipped);\n            break;\n          }\n          r += dr;\n          c += dc;\n        }\n      }\n\n      return flipped;\n    };\n\n    // 32x32ボードの中央は15,16行目付近。標準的なオセロの初期配置の周りをテスト\n    const center = Math.floor(gameState.boardSize / 2); // 16\n    const testPositions = [\n      [center-2, center-1], // [14, 15]\n      [center-1, center-2], // [15, 14] \n      [center-1, center+1], // [15, 17]\n      [center, center-2],   // [16, 14]\n      [center, center+1],   // [16, 17]\n      [center+1, center-2], // [17, 14]\n      [center+1, center-1], // [17, 15]\n      [center+2, center],   // [18, 16]\n    ];\n    \n    for (const [row, col] of testPositions) {\n      if (gameState.board[row][col] === 0) {\n        const flipped = getFlippedPieces(row, col, currentPlayerNumber);\n        console.log(`Testing position [${row}, ${col}]:`, flipped.length, 'pieces would be flipped');\n        if (flipped.length > 0) {\n          validMoves.add(`${row}-${col}`);\n        }\n      }\n    }\n\n    console.log('Valid moves found:', validMoves);\n    return validMoves;\n  };\n\n  return (\n    <AppContainer>\n      <Header>巨大オセロ - Huge Reversi</Header>\n      \n      {!gameState ? (\n        <GameControls\n          gameId={gameId}\n          setGameId={setGameId}\n          playerName={playerName}\n          setPlayerName={setPlayerName}\n          onJoinGame={joinGame}\n          connected={connected}\n        />\n      ) : (\n        <>\n          <GameInfo>\n            <InfoItem>\n              <InfoLabel>ゲームID:</InfoLabel>\n              <InfoValue>{gameState?.gameId || gameId}</InfoValue>\n            </InfoItem>\n            <InfoItem>\n              <InfoLabel>あなたのプレイヤー名:</InfoLabel>\n              <InfoValue>{playerName}</InfoValue>\n            </InfoItem>\n            <InfoItem>\n              <InfoLabel>参加プレイヤー:</InfoLabel>\n              <InfoValue>\n                {gameState?.players?.map(p => p.playerName).join(', ') || 'なし'} \n                ({gameState?.players?.length || 0}/2)\n              </InfoValue>\n            </InfoItem>\n            {gameState?.gameStarted && (\n              <InfoItem>\n                <InfoLabel>現在のターン:</InfoLabel>\n                <InfoValue>{gameState.players[gameState.currentPlayer]?.playerName}</InfoValue>\n              </InfoItem>\n            )}\n          </GameInfo>\n          \n          <GameContainer>\n            {gameState && gameState.boardSize > 16 ? (\n              <VirtualizedBoard \n                gameState={gameState} \n                onMakeMove={makeMove}\n                validMoves={calculateValidMoves(gameState)}\n              />\n            ) : (\n              <GameBoard \n                gameState={gameState} \n                onMakeMove={makeMove}\n              />\n            )}\n          </GameContainer>\n        </>\n      )}\n    </AppContainer>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}