{"ast":null,"code":"var _jsxFileName = \"/Users/koba/work/huge-reversi/client/src/components/VirtualizedBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VirtualContainer = styled.div`\n  position: relative;\n  width: 600px;\n  height: 600px;\n  overflow: auto;\n  border: 3px solid #4CAF50;\n  border-radius: 10px;\n  background-color: #2a2a2a;\n`;\n_c = VirtualContainer;\nconst VirtualBoard = styled.div`\n  position: relative;\n  width: ${props => props.$totalWidth}px;\n  height: ${props => props.$totalHeight}px;\n`;\n_c2 = VirtualBoard;\nconst VirtualRow = styled.div`\n  position: absolute;\n  left: 0;\n  top: ${props => props.$top}px;\n  width: 100%;\n  height: ${props => props.$height}px;\n  display: flex;\n`;\n_c3 = VirtualRow;\nconst Cell = styled.div`\n  width: 20px;\n  height: 20px;\n  background-color: #2e7d32;\n  border: 1px solid #1b5e20;\n  cursor: ${props => props.$clickable ? 'pointer' : 'default'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  left: ${props => props.$left}px;\n  \n  &:hover {\n    background-color: ${props => props.$clickable ? '#388e3c' : '#2e7d32'};\n  }\n`;\n_c4 = Cell;\nconst Piece = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background-color: ${props => props.$player === 1 ? '#000000' : '#ffffff'};\n  border: 1px solid ${props => props.$player === 1 ? '#333333' : '#cccccc'};\n  transition: all 0.6s cubic-bezier(0.4, 0.0, 0.2, 1);\n  transform-style: preserve-3d;\n  \n  &.flipping {\n    animation: flip 0.6s cubic-bezier(0.4, 0.0, 0.2, 1);\n  }\n  \n  &.placing {\n    animation: place 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  }\n  \n  @keyframes flip {\n    0% {\n      transform: rotateY(0deg);\n    }\n    50% {\n      transform: rotateY(90deg) scaleX(0.8);\n    }\n    100% {\n      transform: rotateY(180deg);\n    }\n  }\n  \n  @keyframes place {\n    0% {\n      transform: scale(0) rotateZ(180deg);\n      opacity: 0;\n    }\n    70% {\n      transform: scale(1.2) rotateZ(20deg);\n    }\n    100% {\n      transform: scale(1) rotateZ(0deg);\n      opacity: 1;\n    }\n  }\n`;\n_c5 = Piece;\nconst CELL_SIZE = 20;\nconst BUFFER_SIZE = 5;\nfunction VirtualizedBoard({\n  gameState,\n  onMakeMove,\n  validMoves\n}) {\n  _s();\n  const containerRef = useRef(null);\n  const [scrollTop, setScrollTop] = useState(0);\n  const [scrollLeft, setScrollLeft] = useState(0);\n  const [containerHeight, setContainerHeight] = useState(600);\n  const [containerWidth, setContainerWidth] = useState(600);\n  const [flippingPieces, setFlippingPieces] = useState(new Set());\n  const [placingPieces, setPlacingPieces] = useState(new Set());\n  const prevBoardRef = useRef(null);\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n    const handleScroll = () => {\n      setScrollTop(container.scrollTop);\n      setScrollLeft(container.scrollLeft);\n    };\n    const handleResize = () => {\n      setContainerHeight(container.clientHeight);\n      setContainerWidth(container.clientWidth);\n    };\n    container.addEventListener('scroll', handleScroll);\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    // 初期位置を中央に設定\n    if (gameState) {\n      const centerPosition = gameState.boardSize * CELL_SIZE / 2 - 600 / 2;\n      container.scrollTop = Math.max(0, centerPosition);\n      container.scrollLeft = Math.max(0, centerPosition);\n    }\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [gameState]);\n\n  // ボードの変更を検出してアニメーションを実行\n  useEffect(() => {\n    if (!gameState || !gameState.board || !prevBoardRef.current) {\n      prevBoardRef.current = gameState === null || gameState === void 0 ? void 0 : gameState.board;\n      return;\n    }\n    const prevBoard = prevBoardRef.current;\n    const currentBoard = gameState.board;\n    const newFlippingPieces = new Set();\n\n    // 変更されたセルを検出\n    for (let row = 0; row < gameState.boardSize; row++) {\n      for (let col = 0; col < gameState.boardSize; col++) {\n        if (prevBoard[row] && currentBoard[row] && prevBoard[row][col] !== 0 && currentBoard[row][col] !== 0 && prevBoard[row][col] !== currentBoard[row][col]) {\n          // コマが変更された（ひっくり返った）\n          newFlippingPieces.add(`${row}-${col}`);\n        }\n      }\n    }\n    if (newFlippingPieces.size > 0) {\n      setFlippingPieces(newFlippingPieces);\n\n      // アニメーション終了後にクラスを削除\n      setTimeout(() => {\n        setFlippingPieces(new Set());\n      }, 600); // アニメーション時間と同じ\n    }\n    prevBoardRef.current = currentBoard.map(row => [...row]); // ディープコピー\n  }, [gameState === null || gameState === void 0 ? void 0 : gameState.board]);\n  const visibleRange = useMemo(() => {\n    if (!gameState) return {\n      startRow: 0,\n      endRow: 0,\n      startCol: 0,\n      endCol: 0\n    };\n    const startRow = Math.max(0, Math.floor(scrollTop / CELL_SIZE) - BUFFER_SIZE);\n    const endRow = Math.min(gameState.boardSize - 1, Math.ceil((scrollTop + containerHeight) / CELL_SIZE) + BUFFER_SIZE);\n    const startCol = Math.max(0, Math.floor(scrollLeft / CELL_SIZE) - BUFFER_SIZE);\n    const endCol = Math.min(gameState.boardSize - 1, Math.ceil((scrollLeft + containerWidth) / CELL_SIZE) + BUFFER_SIZE);\n    return {\n      startRow,\n      endRow,\n      startCol,\n      endCol\n    };\n  }, [scrollTop, scrollLeft, containerHeight, containerWidth, gameState]);\n  const handleCellClick = (row, col) => {\n    if (validMoves.has(`${row}-${col}`)) {\n      onMakeMove(row, col);\n    }\n  };\n  if (!gameState) return null;\n  const totalWidth = gameState.boardSize * CELL_SIZE;\n  const totalHeight = gameState.boardSize * CELL_SIZE;\n  const visibleRows = [];\n  console.log('VirtualizedBoard rendering. Visible range:', visibleRange);\n  console.log('Valid moves:', validMoves);\n  for (let row = visibleRange.startRow; row <= visibleRange.endRow; row++) {\n    const cells = [];\n    for (let col = visibleRange.startCol; col <= visibleRange.endCol; col++) {\n      const cell = gameState.board[row][col];\n      const isValidMove = validMoves.has(`${row}-${col}`);\n      const isFlipping = flippingPieces.has(`${row}-${col}`);\n      if (isValidMove) {\n        console.log(`Rendering valid move at [${row}, ${col}]`);\n      }\n      cells.push(/*#__PURE__*/_jsxDEV(Cell, {\n        $clickable: isValidMove,\n        $left: col * CELL_SIZE,\n        onClick: () => handleCellClick(row, col),\n        children: [cell !== 0 && /*#__PURE__*/_jsxDEV(Piece, {\n          $player: cell,\n          className: isFlipping ? 'flipping' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), isValidMove && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            width: '10px',\n            height: '10px',\n            borderRadius: '50%',\n            backgroundColor: '#FFD700',\n            opacity: 1,\n            border: '1px solid #FFA500'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, `${row}-${col}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this));\n    }\n    visibleRows.push(/*#__PURE__*/_jsxDEV(VirtualRow, {\n      $top: row * CELL_SIZE,\n      $height: CELL_SIZE,\n      children: cells\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(VirtualContainer, {\n    ref: containerRef,\n    children: /*#__PURE__*/_jsxDEV(VirtualBoard, {\n      $totalWidth: totalWidth,\n      $totalHeight: totalHeight,\n      children: visibleRows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n}\n_s(VirtualizedBoard, \"x4lzJC1kmj43eDErnT2hh2L45uA=\");\n_c6 = VirtualizedBoard;\nexport default VirtualizedBoard;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"VirtualContainer\");\n$RefreshReg$(_c2, \"VirtualBoard\");\n$RefreshReg$(_c3, \"VirtualRow\");\n$RefreshReg$(_c4, \"Cell\");\n$RefreshReg$(_c5, \"Piece\");\n$RefreshReg$(_c6, \"VirtualizedBoard\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useMemo","styled","jsxDEV","_jsxDEV","VirtualContainer","div","_c","VirtualBoard","props","$totalWidth","$totalHeight","_c2","VirtualRow","$top","$height","_c3","Cell","$clickable","$left","_c4","Piece","$player","_c5","CELL_SIZE","BUFFER_SIZE","VirtualizedBoard","gameState","onMakeMove","validMoves","_s","containerRef","scrollTop","setScrollTop","scrollLeft","setScrollLeft","containerHeight","setContainerHeight","containerWidth","setContainerWidth","flippingPieces","setFlippingPieces","Set","placingPieces","setPlacingPieces","prevBoardRef","container","current","handleScroll","handleResize","clientHeight","clientWidth","addEventListener","window","centerPosition","boardSize","Math","max","removeEventListener","board","prevBoard","currentBoard","newFlippingPieces","row","col","add","size","setTimeout","map","visibleRange","startRow","endRow","startCol","endCol","floor","min","ceil","handleCellClick","has","totalWidth","totalHeight","visibleRows","console","log","cells","cell","isValidMove","isFlipping","push","onClick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","position","width","height","borderRadius","backgroundColor","opacity","border","ref","_c6","$RefreshReg$"],"sources":["/Users/koba/work/huge-reversi/client/src/components/VirtualizedBoard.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useMemo } from 'react';\nimport styled from 'styled-components';\n\nconst VirtualContainer = styled.div`\n  position: relative;\n  width: 600px;\n  height: 600px;\n  overflow: auto;\n  border: 3px solid #4CAF50;\n  border-radius: 10px;\n  background-color: #2a2a2a;\n`;\n\nconst VirtualBoard = styled.div`\n  position: relative;\n  width: ${props => props.$totalWidth}px;\n  height: ${props => props.$totalHeight}px;\n`;\n\nconst VirtualRow = styled.div`\n  position: absolute;\n  left: 0;\n  top: ${props => props.$top}px;\n  width: 100%;\n  height: ${props => props.$height}px;\n  display: flex;\n`;\n\nconst Cell = styled.div`\n  width: 20px;\n  height: 20px;\n  background-color: #2e7d32;\n  border: 1px solid #1b5e20;\n  cursor: ${props => props.$clickable ? 'pointer' : 'default'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  left: ${props => props.$left}px;\n  \n  &:hover {\n    background-color: ${props => props.$clickable ? '#388e3c' : '#2e7d32'};\n  }\n`;\n\nconst Piece = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background-color: ${props => props.$player === 1 ? '#000000' : '#ffffff'};\n  border: 1px solid ${props => props.$player === 1 ? '#333333' : '#cccccc'};\n  transition: all 0.6s cubic-bezier(0.4, 0.0, 0.2, 1);\n  transform-style: preserve-3d;\n  \n  &.flipping {\n    animation: flip 0.6s cubic-bezier(0.4, 0.0, 0.2, 1);\n  }\n  \n  &.placing {\n    animation: place 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  }\n  \n  @keyframes flip {\n    0% {\n      transform: rotateY(0deg);\n    }\n    50% {\n      transform: rotateY(90deg) scaleX(0.8);\n    }\n    100% {\n      transform: rotateY(180deg);\n    }\n  }\n  \n  @keyframes place {\n    0% {\n      transform: scale(0) rotateZ(180deg);\n      opacity: 0;\n    }\n    70% {\n      transform: scale(1.2) rotateZ(20deg);\n    }\n    100% {\n      transform: scale(1) rotateZ(0deg);\n      opacity: 1;\n    }\n  }\n`;\n\nconst CELL_SIZE = 20;\nconst BUFFER_SIZE = 5;\n\nfunction VirtualizedBoard({ gameState, onMakeMove, validMoves }) {\n  const containerRef = useRef(null);\n  const [scrollTop, setScrollTop] = useState(0);\n  const [scrollLeft, setScrollLeft] = useState(0);\n  const [containerHeight, setContainerHeight] = useState(600);\n  const [containerWidth, setContainerWidth] = useState(600);\n  const [flippingPieces, setFlippingPieces] = useState(new Set());\n  const [placingPieces, setPlacingPieces] = useState(new Set());\n  const prevBoardRef = useRef(null);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const handleScroll = () => {\n      setScrollTop(container.scrollTop);\n      setScrollLeft(container.scrollLeft);\n    };\n\n    const handleResize = () => {\n      setContainerHeight(container.clientHeight);\n      setContainerWidth(container.clientWidth);\n    };\n\n    container.addEventListener('scroll', handleScroll);\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    // 初期位置を中央に設定\n    if (gameState) {\n      const centerPosition = (gameState.boardSize * CELL_SIZE / 2) - (600 / 2);\n      container.scrollTop = Math.max(0, centerPosition);\n      container.scrollLeft = Math.max(0, centerPosition);\n    }\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [gameState]);\n\n  // ボードの変更を検出してアニメーションを実行\n  useEffect(() => {\n    if (!gameState || !gameState.board || !prevBoardRef.current) {\n      prevBoardRef.current = gameState?.board;\n      return;\n    }\n\n    const prevBoard = prevBoardRef.current;\n    const currentBoard = gameState.board;\n    const newFlippingPieces = new Set();\n\n    // 変更されたセルを検出\n    for (let row = 0; row < gameState.boardSize; row++) {\n      for (let col = 0; col < gameState.boardSize; col++) {\n        if (prevBoard[row] && currentBoard[row] &&\n            prevBoard[row][col] !== 0 && currentBoard[row][col] !== 0 &&\n            prevBoard[row][col] !== currentBoard[row][col]) {\n          // コマが変更された（ひっくり返った）\n          newFlippingPieces.add(`${row}-${col}`);\n        }\n      }\n    }\n\n    if (newFlippingPieces.size > 0) {\n      setFlippingPieces(newFlippingPieces);\n      \n      // アニメーション終了後にクラスを削除\n      setTimeout(() => {\n        setFlippingPieces(new Set());\n      }, 600); // アニメーション時間と同じ\n    }\n\n    prevBoardRef.current = currentBoard.map(row => [...row]); // ディープコピー\n  }, [gameState?.board]);\n\n  const visibleRange = useMemo(() => {\n    if (!gameState) return { startRow: 0, endRow: 0, startCol: 0, endCol: 0 };\n\n    const startRow = Math.max(0, Math.floor(scrollTop / CELL_SIZE) - BUFFER_SIZE);\n    const endRow = Math.min(\n      gameState.boardSize - 1,\n      Math.ceil((scrollTop + containerHeight) / CELL_SIZE) + BUFFER_SIZE\n    );\n    const startCol = Math.max(0, Math.floor(scrollLeft / CELL_SIZE) - BUFFER_SIZE);\n    const endCol = Math.min(\n      gameState.boardSize - 1,\n      Math.ceil((scrollLeft + containerWidth) / CELL_SIZE) + BUFFER_SIZE\n    );\n\n    return { startRow, endRow, startCol, endCol };\n  }, [scrollTop, scrollLeft, containerHeight, containerWidth, gameState]);\n\n  const handleCellClick = (row, col) => {\n    if (validMoves.has(`${row}-${col}`)) {\n      onMakeMove(row, col);\n    }\n  };\n\n  if (!gameState) return null;\n\n  const totalWidth = gameState.boardSize * CELL_SIZE;\n  const totalHeight = gameState.boardSize * CELL_SIZE;\n\n  const visibleRows = [];\n  console.log('VirtualizedBoard rendering. Visible range:', visibleRange);\n  console.log('Valid moves:', validMoves);\n  \n  for (let row = visibleRange.startRow; row <= visibleRange.endRow; row++) {\n    const cells = [];\n    for (let col = visibleRange.startCol; col <= visibleRange.endCol; col++) {\n      const cell = gameState.board[row][col];\n      const isValidMove = validMoves.has(`${row}-${col}`);\n      const isFlipping = flippingPieces.has(`${row}-${col}`);\n      \n      if (isValidMove) {\n        console.log(`Rendering valid move at [${row}, ${col}]`);\n      }\n      \n      cells.push(\n        <Cell\n          key={`${row}-${col}`}\n          $clickable={isValidMove}\n          $left={col * CELL_SIZE}\n          onClick={() => handleCellClick(row, col)}\n        >\n          {cell !== 0 && (\n            <Piece \n              $player={cell} \n              className={isFlipping ? 'flipping' : ''}\n            />\n          )}\n          {isValidMove && (\n            <div style={{\n              position: 'absolute',\n              width: '10px',\n              height: '10px',\n              borderRadius: '50%',\n              backgroundColor: '#FFD700',\n              opacity: 1,\n              border: '1px solid #FFA500'\n            }} />\n          )}\n        </Cell>\n      );\n    }\n\n    visibleRows.push(\n      <VirtualRow\n        key={row}\n        $top={row * CELL_SIZE}\n        $height={CELL_SIZE}\n      >\n        {cells}\n      </VirtualRow>\n    );\n  }\n\n  return (\n    <VirtualContainer ref={containerRef}>\n      <VirtualBoard $totalWidth={totalWidth} $totalHeight={totalHeight}>\n        {visibleRows}\n      </VirtualBoard>\n    </VirtualContainer>\n  );\n}\n\nexport default VirtualizedBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}