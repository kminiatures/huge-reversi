{"ast":null,"code":"var _jsxFileName = \"/Users/koba/work/huge-reversi/client/src/components/GameBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: flex-start;\n  max-width: 100vw;\n`;\n_c = GameContainer;\nconst BoardContainer = styled.div`\n  position: relative;\n  overflow: auto;\n  max-width: 80vw;\n  max-height: 80vh;\n  border: 3px solid #4CAF50;\n  border-radius: 10px;\n  background-color: #2a2a2a;\n`;\n_c2 = BoardContainer;\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.$size}, 30px);\n  grid-template-rows: repeat(${props => props.$size}, 30px);\n  gap: 1px;\n  background-color: #444;\n  padding: 10px;\n`;\n_c3 = Board;\nconst Cell = styled.div`\n  width: 30px;\n  height: 30px;\n  background-color: #2e7d32;\n  border: 1px solid #1b5e20;\n  cursor: ${props => props.$clickable ? 'pointer' : 'default'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  \n  &:hover {\n    background-color: ${props => props.$clickable ? '#388e3c' : '#2e7d32'};\n  }\n`;\n_c4 = Cell;\nconst Piece = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background-color: ${props => props.$player === 1 ? '#000000' : '#ffffff'};\n  border: 2px solid ${props => props.$player === 1 ? '#333333' : '#cccccc'};\n  transition: all 0.3s ease;\n`;\n_c5 = Piece;\nconst GameInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n  background-color: #2a2a2a;\n  border-radius: 10px;\n  min-width: 250px;\n`;\n_c6 = GameInfo;\nconst PlayerInfo = styled.div`\n  padding: 15px;\n  border-radius: 8px;\n  background-color: ${props => props.$active ? '#4CAF50' : '#333'};\n  border: 2px solid ${props => props.$active ? '#66BB6A' : '#555'};\n`;\n_c7 = PlayerInfo;\nconst PlayerName = styled.div`\n  font-weight: bold;\n  font-size: 16px;\n  margin-bottom: 5px;\n`;\n_c8 = PlayerName;\nconst PlayerScore = styled.div`\n  font-size: 14px;\n  color: #ccc;\n`;\n_c9 = PlayerScore;\nconst GameStatus = styled.div`\n  padding: 15px;\n  background-color: #333;\n  border-radius: 8px;\n  text-align: center;\n`;\n_c0 = GameStatus;\nfunction GameBoard({\n  gameState,\n  onMakeMove,\n  validMoves = new Set()\n}) {\n  _s();\n  var _gameState$players$ga;\n  const boardRef = useRef(null);\n  const calculateValidMoves = () => {\n    if (!gameState || !gameState.gameStarted) return;\n    const currentPlayerNumber = gameState.players[gameState.currentPlayer].playerNumber;\n    const moves = new Set();\n    for (let row = 0; row < gameState.boardSize; row++) {\n      for (let col = 0; col < gameState.boardSize; col++) {\n        if (gameState.board[row][col] === 0) {\n          if (getFlippedPieces(row, col, currentPlayerNumber).length > 0) {\n            moves.add(`${row}-${col}`);\n          }\n        }\n      }\n    }\n    setValidMoves(moves);\n  };\n  const getFlippedPieces = (row, col, playerNumber) => {\n    const flipped = [];\n    const opponent = playerNumber === 1 ? 2 : 1;\n    const directions = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n    for (const [dr, dc] of directions) {\n      const tempFlipped = [];\n      let r = row + dr;\n      let c = col + dc;\n      while (r >= 0 && r < gameState.boardSize && c >= 0 && c < gameState.boardSize) {\n        if (gameState.board[r][c] === 0) break;\n        if (gameState.board[r][c] === opponent) {\n          tempFlipped.push([r, c]);\n        } else if (gameState.board[r][c] === playerNumber) {\n          flipped.push(...tempFlipped);\n          break;\n        }\n        r += dr;\n        c += dc;\n      }\n    }\n    return flipped;\n  };\n  const handleCellClick = (row, col) => {\n    if (validMoves.has(`${row}-${col}`)) {\n      onMakeMove(row, col);\n    }\n  };\n  if (!gameState) return null;\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(BoardContainer, {\n      ref: boardRef,\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        $size: gameState.boardSize,\n        children: gameState.board.map((row, rowIndex) => row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(Cell, {\n          $clickable: validMoves.has(`${rowIndex}-${colIndex}`),\n          onClick: () => handleCellClick(rowIndex, colIndex),\n          children: [cell !== 0 && /*#__PURE__*/_jsxDEV(Piece, {\n            $player: cell\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 32\n          }, this), validMoves.has(`${rowIndex}-${colIndex}`) && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              width: '8px',\n              height: '8px',\n              borderRadius: '50%',\n              backgroundColor: '#FFD700',\n              opacity: 0.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 19\n          }, this)]\n        }, `${rowIndex}-${colIndex}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameInfo, {\n      children: [gameState.players.map((player, index) => /*#__PURE__*/_jsxDEV(PlayerInfo, {\n        $active: gameState.currentPlayer === index,\n        children: [/*#__PURE__*/_jsxDEV(PlayerName, {\n          children: [player.playerName, \" (Player \", player.playerNumber, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PlayerScore, {\n          children: [\"\\u30B9\\u30B3\\u30A2: \", gameState.scores[player.playerNumber] || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, player.socketId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(GameStatus, {\n        children: gameState.gameStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\u73FE\\u5728\\u306E\\u30D7\\u30EC\\u30A4\\u30E4\\u30FC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: 'bold',\n              color: '#4CAF50'\n            },\n            children: (_gameState$players$ga = gameState.players[gameState.currentPlayer]) === null || _gameState$players$ga === void 0 ? void 0 : _gameState$players$ga.playerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u30D7\\u30EC\\u30A4\\u30E4\\u30FC\\u3092\\u5F85\\u6A5F\\u4E2D... (\", gameState.players.length, \"/2)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(GameBoard, \"XcdElC4+nkqWjXVI0f2NZ9bgrbc=\");\n_c1 = GameBoard;\nexport default GameBoard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1;\n$RefreshReg$(_c, \"GameContainer\");\n$RefreshReg$(_c2, \"BoardContainer\");\n$RefreshReg$(_c3, \"Board\");\n$RefreshReg$(_c4, \"Cell\");\n$RefreshReg$(_c5, \"Piece\");\n$RefreshReg$(_c6, \"GameInfo\");\n$RefreshReg$(_c7, \"PlayerInfo\");\n$RefreshReg$(_c8, \"PlayerName\");\n$RefreshReg$(_c9, \"PlayerScore\");\n$RefreshReg$(_c0, \"GameStatus\");\n$RefreshReg$(_c1, \"GameBoard\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styled","jsxDEV","_jsxDEV","GameContainer","div","_c","BoardContainer","_c2","Board","props","$size","_c3","Cell","$clickable","_c4","Piece","$player","_c5","GameInfo","_c6","PlayerInfo","$active","_c7","PlayerName","_c8","PlayerScore","_c9","GameStatus","_c0","GameBoard","gameState","onMakeMove","validMoves","Set","_s","_gameState$players$ga","boardRef","calculateValidMoves","gameStarted","currentPlayerNumber","players","currentPlayer","playerNumber","moves","row","boardSize","col","board","getFlippedPieces","length","add","setValidMoves","flipped","opponent","directions","dr","dc","tempFlipped","r","c","push","handleCellClick","has","children","ref","map","rowIndex","cell","colIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","position","width","height","borderRadius","backgroundColor","opacity","player","index","playerName","scores","socketId","fontWeight","color","_c1","$RefreshReg$"],"sources":["/Users/koba/work/huge-reversi/client/src/components/GameBoard.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst GameContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: flex-start;\n  max-width: 100vw;\n`;\n\nconst BoardContainer = styled.div`\n  position: relative;\n  overflow: auto;\n  max-width: 80vw;\n  max-height: 80vh;\n  border: 3px solid #4CAF50;\n  border-radius: 10px;\n  background-color: #2a2a2a;\n`;\n\nconst Board = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.$size}, 30px);\n  grid-template-rows: repeat(${props => props.$size}, 30px);\n  gap: 1px;\n  background-color: #444;\n  padding: 10px;\n`;\n\nconst Cell = styled.div`\n  width: 30px;\n  height: 30px;\n  background-color: #2e7d32;\n  border: 1px solid #1b5e20;\n  cursor: ${props => props.$clickable ? 'pointer' : 'default'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  \n  &:hover {\n    background-color: ${props => props.$clickable ? '#388e3c' : '#2e7d32'};\n  }\n`;\n\nconst Piece = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background-color: ${props => props.$player === 1 ? '#000000' : '#ffffff'};\n  border: 2px solid ${props => props.$player === 1 ? '#333333' : '#cccccc'};\n  transition: all 0.3s ease;\n`;\n\nconst GameInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n  background-color: #2a2a2a;\n  border-radius: 10px;\n  min-width: 250px;\n`;\n\nconst PlayerInfo = styled.div`\n  padding: 15px;\n  border-radius: 8px;\n  background-color: ${props => props.$active ? '#4CAF50' : '#333'};\n  border: 2px solid ${props => props.$active ? '#66BB6A' : '#555'};\n`;\n\nconst PlayerName = styled.div`\n  font-weight: bold;\n  font-size: 16px;\n  margin-bottom: 5px;\n`;\n\nconst PlayerScore = styled.div`\n  font-size: 14px;\n  color: #ccc;\n`;\n\nconst GameStatus = styled.div`\n  padding: 15px;\n  background-color: #333;\n  border-radius: 8px;\n  text-align: center;\n`;\n\nfunction GameBoard({ gameState, onMakeMove, validMoves = new Set() }) {\n  const boardRef = useRef(null);\n\n  const calculateValidMoves = () => {\n    if (!gameState || !gameState.gameStarted) return;\n\n    const currentPlayerNumber = gameState.players[gameState.currentPlayer].playerNumber;\n    const moves = new Set();\n\n    for (let row = 0; row < gameState.boardSize; row++) {\n      for (let col = 0; col < gameState.boardSize; col++) {\n        if (gameState.board[row][col] === 0) {\n          if (getFlippedPieces(row, col, currentPlayerNumber).length > 0) {\n            moves.add(`${row}-${col}`);\n          }\n        }\n      }\n    }\n\n    setValidMoves(moves);\n  };\n\n  const getFlippedPieces = (row, col, playerNumber) => {\n    const flipped = [];\n    const opponent = playerNumber === 1 ? 2 : 1;\n    const directions = [\n      [-1, -1], [-1, 0], [-1, 1],\n      [0, -1],           [0, 1],\n      [1, -1],  [1, 0],  [1, 1]\n    ];\n\n    for (const [dr, dc] of directions) {\n      const tempFlipped = [];\n      let r = row + dr;\n      let c = col + dc;\n\n      while (r >= 0 && r < gameState.boardSize && c >= 0 && c < gameState.boardSize) {\n        if (gameState.board[r][c] === 0) break;\n        if (gameState.board[r][c] === opponent) {\n          tempFlipped.push([r, c]);\n        } else if (gameState.board[r][c] === playerNumber) {\n          flipped.push(...tempFlipped);\n          break;\n        }\n        r += dr;\n        c += dc;\n      }\n    }\n\n    return flipped;\n  };\n\n  const handleCellClick = (row, col) => {\n    if (validMoves.has(`${row}-${col}`)) {\n      onMakeMove(row, col);\n    }\n  };\n\n  if (!gameState) return null;\n\n  return (\n    <GameContainer>\n      <BoardContainer ref={boardRef}>\n        <Board $size={gameState.boardSize}>\n          {gameState.board.map((row, rowIndex) =>\n            row.map((cell, colIndex) => (\n              <Cell\n                key={`${rowIndex}-${colIndex}`}\n                $clickable={validMoves.has(`${rowIndex}-${colIndex}`)}\n                onClick={() => handleCellClick(rowIndex, colIndex)}\n              >\n                {cell !== 0 && <Piece $player={cell} />}\n                {validMoves.has(`${rowIndex}-${colIndex}`) && (\n                  <div style={{\n                    position: 'absolute',\n                    width: '8px',\n                    height: '8px',\n                    borderRadius: '50%',\n                    backgroundColor: '#FFD700',\n                    opacity: 0.7\n                  }} />\n                )}\n              </Cell>\n            ))\n          )}\n        </Board>\n      </BoardContainer>\n\n      <GameInfo>\n        {gameState.players.map((player, index) => (\n          <PlayerInfo key={player.socketId} $active={gameState.currentPlayer === index}>\n            <PlayerName>\n              {player.playerName} (Player {player.playerNumber})\n            </PlayerName>\n            <PlayerScore>\n              スコア: {gameState.scores[player.playerNumber] || 0}\n            </PlayerScore>\n          </PlayerInfo>\n        ))}\n\n        <GameStatus>\n          {gameState.gameStarted ? (\n            <div>\n              <div>現在のプレイヤー:</div>\n              <div style={{ fontWeight: 'bold', color: '#4CAF50' }}>\n                {gameState.players[gameState.currentPlayer]?.playerName}\n              </div>\n            </div>\n          ) : (\n            <div>プレイヤーを待機中... ({gameState.players.length}/2)</div>\n          )}\n        </GameStatus>\n      </GameInfo>\n    </GameContainer>\n  );\n}\n\nexport default GameBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}