{"ast":null,"code":"var _jsxFileName = \"/Users/koba/work/huge-reversi/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport styled from 'styled-components';\nimport GameBoard from './components/GameBoard';\nimport VirtualizedBoard from './components/VirtualizedBoard';\nimport GameControls from './components/GameControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #1a1a1a;\n  color: white;\n  font-family: Arial, sans-serif;\n`;\n_c = AppContainer;\nconst Header = styled.h1`\n  margin: 20px 0;\n  color: #4CAF50;\n`;\n_c2 = Header;\nconst GameContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: flex-start;\n  max-width: 100vw;\n  overflow: hidden;\n`;\n_c3 = GameContainer;\nfunction App() {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [gameState, setGameState] = useState(null);\n  const [gameId, setGameId] = useState('');\n  const [playerName, setPlayerName] = useState('');\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    const newSocket = io('http://localhost:5001');\n    setSocket(newSocket);\n    newSocket.on('connect', () => {\n      setConnected(true);\n    });\n    newSocket.on('disconnect', () => {\n      setConnected(false);\n    });\n    newSocket.on('gameState', state => {\n      setGameState(state);\n    });\n    newSocket.on('gameOver', winner => {\n      alert(`ゲーム終了！勝者: ${winner ? winner.playerName : '引き分け'}`);\n    });\n    newSocket.on('error', error => {\n      alert(`エラー: ${error}`);\n    });\n    return () => newSocket.close();\n  }, []);\n  const joinGame = () => {\n    if (socket && gameId && playerName) {\n      socket.emit('joinGame', {\n        gameId,\n        playerName\n      });\n    }\n  };\n  const makeMove = (row, col) => {\n    if (socket && gameState) {\n      socket.emit('makeMove', {\n        gameId: gameState.gameId,\n        row,\n        col\n      });\n    }\n  };\n\n  // 有効な手を計算する関数\n  const calculateValidMoves = gameState => {\n    console.log('calculateValidMoves called with gameState:', gameState);\n    if (!gameState) {\n      console.log('No gameState');\n      return new Set();\n    }\n    if (!gameState.gameStarted) {\n      console.log('Game not started');\n      return new Set();\n    }\n    if (gameState.players.length !== 2) {\n      console.log('Not enough players:', gameState.players.length);\n      return new Set();\n    }\n    const currentPlayerNumber = gameState.players[gameState.currentPlayer].playerNumber;\n    console.log('Current player number:', currentPlayerNumber);\n    console.log('Board center area:', gameState.board.slice(14, 18).map(row => row.slice(14, 18)));\n    const validMoves = new Set();\n    const directions = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n    const getFlippedPieces = (row, col, playerNumber) => {\n      const flipped = [];\n      const opponent = playerNumber === 1 ? 2 : 1;\n      for (const [dr, dc] of directions) {\n        const tempFlipped = [];\n        let r = row + dr;\n        let c = col + dc;\n        while (r >= 0 && r < gameState.boardSize && c >= 0 && c < gameState.boardSize) {\n          if (gameState.board[r][c] === 0) break;\n          if (gameState.board[r][c] === opponent) {\n            tempFlipped.push([r, c]);\n          } else if (gameState.board[r][c] === playerNumber) {\n            flipped.push(...tempFlipped);\n            break;\n          }\n          r += dr;\n          c += dc;\n        }\n      }\n      return flipped;\n    };\n\n    // 中央付近の一部のセルをテスト\n    const testPositions = [[14, 13], [14, 16], [15, 16], [16, 16], [17, 15], [17, 14], [16, 13], [15, 13]];\n    for (const [row, col] of testPositions) {\n      if (gameState.board[row][col] === 0) {\n        const flipped = getFlippedPieces(row, col, currentPlayerNumber);\n        console.log(`Testing position [${row}, ${col}]:`, flipped.length, 'pieces would be flipped');\n        if (flipped.length > 0) {\n          validMoves.add(`${row}-${col}`);\n        }\n      }\n    }\n    console.log('Valid moves found:', validMoves);\n    return validMoves;\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"\\u5DE8\\u5927\\u30AA\\u30BB\\u30ED - Huge Reversi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), !gameState ? /*#__PURE__*/_jsxDEV(GameControls, {\n      gameId: gameId,\n      setGameId: setGameId,\n      playerName: playerName,\n      setPlayerName: setPlayerName,\n      onJoinGame: joinGame,\n      connected: connected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GameContainer, {\n      children: gameState && gameState.boardSize > 16 ? /*#__PURE__*/_jsxDEV(VirtualizedBoard, {\n        gameState: gameState,\n        onMakeMove: makeMove,\n        validMoves: calculateValidMoves(gameState)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(GameBoard, {\n        gameState: gameState,\n        onMakeMove: makeMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ft8HSaEbWDglEhS86cRWrbttBG0=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"GameContainer\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","styled","GameBoard","VirtualizedBoard","GameControls","jsxDEV","_jsxDEV","AppContainer","div","_c","Header","h1","_c2","GameContainer","_c3","App","_s","socket","setSocket","gameState","setGameState","gameId","setGameId","playerName","setPlayerName","connected","setConnected","newSocket","on","state","winner","alert","error","close","joinGame","emit","makeMove","row","col","calculateValidMoves","console","log","Set","gameStarted","players","length","currentPlayerNumber","currentPlayer","playerNumber","board","slice","map","validMoves","directions","getFlippedPieces","flipped","opponent","dr","dc","tempFlipped","r","c","boardSize","push","testPositions","add","children","fileName","_jsxFileName","lineNumber","columnNumber","onJoinGame","onMakeMove","_c4","$RefreshReg$"],"sources":["/Users/koba/work/huge-reversi/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport styled from 'styled-components';\nimport GameBoard from './components/GameBoard';\nimport VirtualizedBoard from './components/VirtualizedBoard';\nimport GameControls from './components/GameControls';\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh;\n  background-color: #1a1a1a;\n  color: white;\n  font-family: Arial, sans-serif;\n`;\n\nconst Header = styled.h1`\n  margin: 20px 0;\n  color: #4CAF50;\n`;\n\nconst GameContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: flex-start;\n  max-width: 100vw;\n  overflow: hidden;\n`;\n\nfunction App() {\n  const [socket, setSocket] = useState(null);\n  const [gameState, setGameState] = useState(null);\n  const [gameId, setGameId] = useState('');\n  const [playerName, setPlayerName] = useState('');\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    const newSocket = io('http://localhost:5001');\n    setSocket(newSocket);\n\n    newSocket.on('connect', () => {\n      setConnected(true);\n    });\n\n    newSocket.on('disconnect', () => {\n      setConnected(false);\n    });\n\n    newSocket.on('gameState', (state) => {\n      setGameState(state);\n    });\n\n    newSocket.on('gameOver', (winner) => {\n      alert(`ゲーム終了！勝者: ${winner ? winner.playerName : '引き分け'}`);\n    });\n\n    newSocket.on('error', (error) => {\n      alert(`エラー: ${error}`);\n    });\n\n    return () => newSocket.close();\n  }, []);\n\n  const joinGame = () => {\n    if (socket && gameId && playerName) {\n      socket.emit('joinGame', { gameId, playerName });\n    }\n  };\n\n  const makeMove = (row, col) => {\n    if (socket && gameState) {\n      socket.emit('makeMove', { gameId: gameState.gameId, row, col });\n    }\n  };\n\n  // 有効な手を計算する関数\n  const calculateValidMoves = (gameState) => {\n    console.log('calculateValidMoves called with gameState:', gameState);\n    \n    if (!gameState) {\n      console.log('No gameState');\n      return new Set();\n    }\n    \n    if (!gameState.gameStarted) {\n      console.log('Game not started');\n      return new Set();\n    }\n    \n    if (gameState.players.length !== 2) {\n      console.log('Not enough players:', gameState.players.length);\n      return new Set();\n    }\n\n    const currentPlayerNumber = gameState.players[gameState.currentPlayer].playerNumber;\n    console.log('Current player number:', currentPlayerNumber);\n    console.log('Board center area:', gameState.board.slice(14, 18).map(row => row.slice(14, 18)));\n    \n    const validMoves = new Set();\n    const directions = [\n      [-1, -1], [-1, 0], [-1, 1],\n      [0, -1],           [0, 1],\n      [1, -1],  [1, 0],  [1, 1]\n    ];\n\n    const getFlippedPieces = (row, col, playerNumber) => {\n      const flipped = [];\n      const opponent = playerNumber === 1 ? 2 : 1;\n\n      for (const [dr, dc] of directions) {\n        const tempFlipped = [];\n        let r = row + dr;\n        let c = col + dc;\n\n        while (r >= 0 && r < gameState.boardSize && c >= 0 && c < gameState.boardSize) {\n          if (gameState.board[r][c] === 0) break;\n          if (gameState.board[r][c] === opponent) {\n            tempFlipped.push([r, c]);\n          } else if (gameState.board[r][c] === playerNumber) {\n            flipped.push(...tempFlipped);\n            break;\n          }\n          r += dr;\n          c += dc;\n        }\n      }\n\n      return flipped;\n    };\n\n    // 中央付近の一部のセルをテスト\n    const testPositions = [\n      [14, 13], [14, 16], [15, 16], [16, 16], [17, 15], [17, 14], [16, 13], [15, 13]\n    ];\n    \n    for (const [row, col] of testPositions) {\n      if (gameState.board[row][col] === 0) {\n        const flipped = getFlippedPieces(row, col, currentPlayerNumber);\n        console.log(`Testing position [${row}, ${col}]:`, flipped.length, 'pieces would be flipped');\n        if (flipped.length > 0) {\n          validMoves.add(`${row}-${col}`);\n        }\n      }\n    }\n\n    console.log('Valid moves found:', validMoves);\n    return validMoves;\n  };\n\n  return (\n    <AppContainer>\n      <Header>巨大オセロ - Huge Reversi</Header>\n      \n      {!gameState ? (\n        <GameControls\n          gameId={gameId}\n          setGameId={setGameId}\n          playerName={playerName}\n          setPlayerName={setPlayerName}\n          onJoinGame={joinGame}\n          connected={connected}\n        />\n      ) : (\n        <GameContainer>\n          {gameState && gameState.boardSize > 16 ? (\n            <VirtualizedBoard \n              gameState={gameState} \n              onMakeMove={makeMove}\n              validMoves={calculateValidMoves(gameState)}\n            />\n          ) : (\n            <GameBoard \n              gameState={gameState} \n              onMakeMove={makeMove}\n            />\n          )}\n        </GameContainer>\n      )}\n    </AppContainer>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}